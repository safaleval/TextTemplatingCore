<Project Sdk="Microsoft.NET.Sdk.Web">
	<PropertyGroup>
		<TargetFrameworks>netcoreapp3.1;net6.0;net7.0</TargetFrameworks>
		<Version>5.0.1.24</Version>
    <Authors>Jacknq</Authors>
    <Description>Latest version supports .netcore 7.0, 6.0

	CSX and T4 scaffolding for .NET Core without IDE, 
    transform .tt files from your command line or runtime, based on roslyn, no 3rdparty dependencies.
    One of the very few that supports webprojects with dll reflection!

    usage: "dotnet tt -h"
           "dotnet tt file.csx"

T4 and CSX scaffolding for .NET Core without IDE, Library for TextTemplating.Tool package and runtime

Requires
 
<PackageReference Include="TextTemplating.Core" Version="5.0.0" /> 
 
Using tool? great! leave me star or feedback on github

VSCODE Extension

[https://marketplace.visualstudio.com/items?itemName=jacknq.TextTemplating]</Description>
    <PackageTags>T4;TextTemplating;Core;tt;csx;dotnet</PackageTags>
    <OutputType>Exe</OutputType>
    <AssemblyName>TextTemplating.Tool</AssemblyName>
    <PackageId>TextTemplating.Tool</PackageId>
    <PackageProjectUrl>https://github.com/Jacknq/TextTemplatingCore</PackageProjectUrl>
    <PackageLicense>http://www.opensource.org/licenses/MIT</PackageLicense>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackAsTool>true</PackAsTool>
    <IsPackable>true</IsPackable>
    <ToolCommandName>tt</ToolCommandName>
    <PackageOutputPath>./nupkg</PackageOutputPath>  
    <PreserveCompilationContext>true</PreserveCompilationContext>
   <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
   <NoWarn>NU5128</NoWarn>
 <!-- <NuSpecPath>./Textemplating.tool.nuspec</NuSpecPath> -->
<!-- <PublishSingleFile>true</PublishSingleFile>  -->
 <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
 <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources\*" />
  </ItemGroup>
  <ItemGroup>
		<!-- <PackageReference Include="TextTemplating.Core" Version="5.0.0.0" /> -->
		<PackageReference Include="Microsoft.CodeAnalysis" Version="4.4.0" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp.Scripting" Version="4.4.0" />
		<PackageReference Include="Microsoft.Extensions.CommandLineUtils" Version="1.1.1" />
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />
		<!--
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="3.8.0" />
		
		<PackageReference Include="Microsoft.Extensions.FileSystemGlobbing" Version="5.0.0" />
		<PackageReference Include="Microsoft.Extensions.PlatformAbstractions" Version="1.1.0" />
		-->
	</ItemGroup>
	 <ItemGroup>
    <ProjectReference Include="..\TextTemplating\TextTemplating.csproj" PrivateAssets="All">
    <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
     <IncludeAssets>TextTemplating.Core.dll</IncludeAssets>
     <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </ProjectReference>
    
    </ItemGroup>


 <Target DependsOnTargets="ResolveReferences" Name="CopyProjectReferencesToPackage">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>
</Project>
